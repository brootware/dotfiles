---
- name: Machine setup
  hosts: localhost
  connection: local
  gather_facts: true

  tasks:
    - name: Include vars of global_vars.yml file.
      include_vars:
        file: global_vars.yml

    - name: Get my user
      ansible.builtin.set_fact:
        remote_regular_user: "{{ ansible_user_id }}"

    - name: Show who you are
      ansible.builtin.debug:
        msg: "Hello {{ remote_regular_user }}!"

    # Clone zsh-autosuggestion repo into local zsh plugin directory for use
    # git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions
    - name: Install zsh plugins
      ansible.builtin.git:
        repo: "https://github.com/zsh-users/{{ item }}.git"
        dest: "{{ ansible_env.HOME }}/.oh-my-zsh/custom/plugins/{{ item }}"
        clone: yes
      with_items: "{{ zsh_plugins }}"

    - name: Install personalised ubuntu apt packages.
      ansible.builtin.package:
        state: present
        name: "{{ item }}"
      with_items: "{{ packages }}"
      ignore_errors: true
      become: true

    - name: Download vscode directly from source for linux mint.
      ansible.builtin.get_url:
        url: "https://code.visualstudio.com/sha/download?build=stable&os=linux-deb-x64"
        dest: "/tmp/{{ vscode_deb }}"
      become: true
      when: ansible_facts['distribution'] == 'Linux Mint'

    - name: Install downloaded vscode for Linux Mint.
      ansible.builtin.apt:
        state: present
        deb: "/tmp/{{ vscode_deb }}"
        update_cache: yes
      become: true
      when: ansible_facts['distribution'] == 'Linux Mint'

    - name: Install personalised flatpak packages. (Will fail if you are on ubuntu and do not have flatpak manager installed.)
      community.general.flatpak:
        state: present
        method: system
        name: "{{ item }}"
      with_items: "{{ flatpaks }}"
      when: ansible_facts['distribution'] == 'Linux Mint'
      ignore_errors: true
      become: true

    - name: Install personalised snap packages. (Will fail if you are on linux mint and do not have snap package manager installed.)
      community.general.snap:
        state: present
        classic: true
        name: "{{ item }}"
      with_items: "{{ snaps }}"
      when: ansible_facts['distribution'] == 'Ubuntu'
      ignore_errors: true
      become: true

    - name: Replace GRUB_DEFAULT line in /etc/default/grub.
      lineinfile:
        path: /etc/default/grub
        regexp: '^GRUB_DEFAULT='
        line: 'GRUB_DEFAULT=saved'
      become: true

    - name: Edit grub to remember last choice of grub OS boot menu.
      blockinfile:
        path: /etc/default/grub
        block: |
          # Remember last choice of OS boot functionality
          GRUB_SAVEDEFAULT=true
        insertafter: EOF
      become: true
    
    - name: Update Grub configuration for Debian.
      command: update-grub
      become: true
      when: ansible_facts['distribution'] == 'Ubuntu' or ansible_facts['distribution'] == 'Linux Mint'

    - name: Set bluetooth idle timeout to 15 minutes. https://askubuntu.com/questions/1264725/how-to-disable-bluetooth-power-saving
      lineinfile:
        path: /etc/bluetooth/input.conf
        regexp: '^#IdleTimeout=30'
        line: 'IdleTimeout=15'
      become: true

    - name: Update bluetooth service configuration.
      command: systemctl restart bluetooth.service
      become: true

    - name: Check if earlyoom config file exists
      ansible.builtin.stat:
        path: /etc/default/earlyoom
      register: earlyoom_stat

    - name: Update EARLYOOM_ARGS in /etc/default/earlyoom customized for vscode 61696 crash
      ansible.builtin.lineinfile:
        path: /etc/default/earlyoom
        regexp: '^EARLYOOM_ARGS='
        line: 'EARLYOOM_ARGS="-r 0 -m 4 -M 409600 --prefer ''^Web Content$'' --avoid ''^(apt|code|packagekitd|gnome-shell|gnome-session-c|gnome-session-b|lightdm|sddm|sddm-helper|gdm|gdm-wayland-ses|gdm-session-wor|gdm-x-session|Xorg|Xwayland|systemd|systemd-logind|dbus-daemon|dbus-broker|cinnamon|cinnamon-session|kwin_x11|kwin_wayland|plasmashell|ksmserver|plasma_session|startplasma-way|xfce4-session|mate-session|marco|lxqt-session|openbox)$'''
        state: present
        backup: yes
      when: earlyoom_stat.stat.exists
      notify: Restart earlyoom

  handlers:
    - name: Restart earlyoom
      ansible.builtin.service:
        name: earlyoom
        state: restarted
      when: earlyoom_stat.stat.exists  